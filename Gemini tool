<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Hair Salon Finder</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap');
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f3f4f6;
        }
        .container {
            max-width: 900px;
        }
        .card {
            background-color: white;
            border-radius: 12px;
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }
        .button {
            transition: all 0.3s ease;
        }
        .button:hover {
            transform: translateY(-2px);
            box-shadow: 4px 6px 15px rgba(0, 0, 0, 0.1);
        }
        .loader {
            border: 4px solid #f3f3f3;
            border-top: 4px solid #3b82f6;
            border-radius: 50%;
            width: 30px;
            height: 30px;
            animation: spin 1s linear infinite;
        }
        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }
        .animate-fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }
    </style>
    <script type="module">
        const resultsContainer = document.getElementById('results-container');
        const searchInput = document.getElementById('search-input');
        const searchButton = document.getElementById('search-button');
        const exportButton = document.getElementById('export-button');
        const loadingSpinner = document.getElementById('loading-spinner');
        const statusMessage = document.getElementById('status-message');
        
        // This is the Google Places API key provided by the user.
        const GOOGLE_PLACES_API_KEY = "AIzaSyAyh7Ik2dnRJsgwvBtiKX-rYCOyLOEjWsM";
        let salonData = []; // To store results for export

        /**
         * A helper function to manage the status message and loading spinner UI.
         * @param {string} message The message to display.
         * @param {boolean} isLoading Whether to show the loading spinner.
         */
        const updateStatus = (message, isLoading) => {
            statusMessage.textContent = message;
            if (isLoading) {
                loadingSpinner.classList.remove('hidden');
            } else {
                loadingSpinner.classList.add('hidden');
            }
        };

        /**
         * Searches for salons using the Google Places Text Search API.
         * @param {string} city The city to search for.
         */
        const searchSalons = async (city) => {
            try {
                // Construct the Google Places Text Search URL
                const query = `hair salons in ${city}`;
                const apiUrl = `https://maps.googleapis.com/maps/api/place/textsearch/json?query=${encodeURIComponent(query)}&key=${GOOGLE_PLACES_API_KEY}`;
                
                // Fetch the data from the Google Places API
                const response = await fetch(apiUrl);
                
                if (!response.ok) {
                    throw new Error(`API call failed with status ${response.status}`);
                }

                const data = await response.json();
                
                // Check for API-level errors
                if (data.status !== 'OK' && data.status !== 'ZERO_RESULTS') {
                    throw new Error(`Google Places API error: ${data.status}`);
                }

                salonData = data.results.map(place => ({
                    name: place.name || 'N/A',
                    address: place.formatted_address || 'N/A',
                    phone: place.formatted_phone_number || 'N/A',
                    website: place.website || 'N/A' 
                }));
                
                displayResults(salonData);
                
                if (salonData.length > 0) {
                    exportButton.classList.remove('hidden');
                    updateStatus(`Search complete! Found ${salonData.length} salons in ${city}.`, false);
                } else {
                    exportButton.classList.add('hidden');
                    updateStatus(`Search complete! Found no salons in ${city}.`, false);
                }

            } catch (error) {
                console.error("Error during search:", error);
                updateStatus(`An unexpected error occurred during the search: ${error.message}.`, false);
            }
        };

        /**
         * Displays the search results in the UI.
         * @param {Array<Object>} results The array of salon objects to display.
         */
        const displayResults = (results) => {
            resultsContainer.innerHTML = '';
            if (!Array.isArray(results) || results.length === 0) {
                resultsContainer.innerHTML = '<p class="text-gray-500 text-center">No salons were found. Please check the city name and try again.</p>';
                return;
            }
            results.forEach((salon) => {
                const salonCard = document.createElement('div');
                salonCard.className = 'card p-6 mb-4 animate-fade-in flex flex-col md:flex-row justify-between items-start md:items-center space-y-4 md:space-y-0';
                salonCard.innerHTML = `
                    <div class="flex-1">
                        <h3 class="text-xl font-semibold text-gray-800">${salon.name || 'N/A'}</h3>
                        <p class="text-gray-600 mt-2">${salon.address || 'N/A'}</p>
                        <p class="text-gray-600">Phone: ${salon.phone || 'N/A'}</p>
                        <a href="${salon.website && salon.website !== 'N/A' ? salon.website : '#'}" target="_blank" class="text-blue-600 hover:underline mt-1 block">${salon.website || 'N/A'}</a>
                    </div>
                `;
                resultsContainer.appendChild(salonCard);
            });
        };
        
        /**
         * Exports the current salon data to a CSV file.
         */
        const exportToCsv = () => {
            if (salonData.length === 0) {
                updateStatus('No data to export.', false);
                return;
            }
            
            const headers = ["Name", "Address", "Phone", "Website"];
            const csvRows = [headers.join(',')];
            
            salonData.forEach(salon => {
                const row = headers.map(header => {
                    const value = salon[header.toLowerCase()] || '';
                    const sanitizedValue = `"${value.replace(/"/g, '""')}"`;
                    return sanitizedValue;
                });
                csvRows.push(row.join(','));
            });
            
            const csvString = csvRows.join('\n');
            const blob = new Blob([csvString], { type: 'text/csv;charset=utf-8;' });
            const link = document.createElement('a');
            
            link.href = URL.createObjectURL(blob);
            link.download = 'hair_salons.csv';
            
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
            
            updateStatus('CSV file exported successfully!', false);
        };

        searchButton.addEventListener('click', () => {
            const cityInput = searchInput.value.trim();
            if (!cityInput) {
                updateStatus('Please enter a city name.', false);
                return;
            }

            updateStatus('Searching...', true);
            searchSalons(cityInput);
        });
        
        exportButton.addEventListener('click', exportToCsv);

        window.onload = () => {
          updateStatus('Enter a city and click Search.', false);
        };
    </script>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen p-4">

    <div class="container mx-auto p-8 card">
        <h1 class="text-3xl md:text-4xl font-bold text-center text-gray-800 mb-6">Hair Salon Finder</h1>
        <p class="text-center text-gray-600 mb-8">
            Enter a city to find a list of hair salons.
        </p>

        <div class="flex flex-col sm:flex-row items-center space-y-4 sm:space-y-0 sm:space-x-4 mb-6">
            <input type="text" id="search-input" placeholder="e.g., Los Angeles, CA" class="flex-1 p-3 border-2 border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500">
            <button id="search-button" class="button px-6 py-3 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700">
                Search
            </button>
            <button id="export-button" class="hidden button px-6 py-3 bg-green-600 text-white font-semibold rounded-lg hover:bg-green-700">
                Export to CSV
            </button>
        </div>

        <div id="status-message" class="text-center text-gray-700 mt-6 mb-6">Enter a city and click Search.</div>
        
        <div class="flex justify-center mb-6">
            <div id="loading-spinner" class="loader hidden"></div>
        </div>

        <div id="results-container" class="space-y-4">
            <!-- Search results will be displayed here -->
        </div>
    </div>

</body>
</html>
